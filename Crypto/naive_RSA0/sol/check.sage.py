
# This file was *autogenerated* from the file check.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1500 = Integer(1500); _sage_const_3 = Integer(3); _sage_constntegersage_const_0 = Integer(0)
from Crypto.Util.number import bytes_to_long, long_to_bytes

n = _sage_const
s = open("cipher", "rb").read()
s = Integer(bytes_to_long(s))

for i in range(_sage_const_0 , _sage_const_1500 ):
    try:
        print(long_to_bytes(long((n*i + s).nth_root(_sage_const_3 ))))
    except:
        pass

